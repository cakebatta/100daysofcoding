from openpyxl import *
import collections
import statistics
workbook = load_workbook('TFT Set 4 PBE.xlsx')
ws = workbook[workbook.sheetnames[0]]

games = []
carouselComp1 = []
comp2 = []
comp3 = []
comp4 = []
fullItem1 = []
fullItem2 = []
fullItem3 = []
fullItem4 = []
trait1 = []
trait2 = []
trait3 = []
placement = []
notes = []

def getData(min_row, min_col, max_row, max_col, list):
    for col in ws.iter_cols(min_row=min_row, min_col=min_col, max_row=max_row, max_col=max_col):
        for cell in col:
            list.append(cell.value)

getData(42,1,81,1,games)
getData(42,2,81,2,carouselComp1)
getData(42,3,81,3,comp2)
getData(42,4,81,4,comp3)
getData(42,5,81,5,comp4)
getData(42,6,81,6,fullItem1)
getData(42,7,81,7,fullItem2)
getData(42,8,81,8,fullItem3)
getData(42,9,81,9,fullItem4)
getData(42,10,81,10,trait1)
getData(42,11,81,11,trait2)
getData(42,12,81,12,trait3)
getData(42,13,81,13,placement)
getData(42,14,81,14,notes)


class My_Dictionary(dict):
    def __init__(self):
        self = dict()

    def add(self, key, value):
        self[key] = value


traitList = [trait1,placement]
componentList = [carouselComp1, placement]
firstItemList = [fullItem1, placement]\

uniqueTraits = set(trait1)
uniqueCarousel = set(carouselComp1)
uniqueFull = set(fullItem1)
print(sorted(uniqueFull))
print(sorted(uniqueCarousel))
print(sorted(uniqueTraits))
occurrencesTraits = collections.Counter(trait1)
occurrencesPlacements = collections.Counter(placement)
occurrencesItem1 = collections.Counter(fullItem1)
occurrencesComp1 = collections.Counter(carouselComp1)

# print(occurrencesTraits)
# print(occurrencesPlacements)
# print(occurrencesComp1)
# print(occurrencesItem1)
# print(traitList)
trait1ByPlacement = list(zip(trait1, placement))
carouselComp1ByPlacement = list(zip(carouselComp1, placement))
fullItem1ByPlacement = list(zip(fullItem1, placement))

trait1ByPlacement.sort()
# print(trait1ByPlacement)

#make a list for each unique trait, iterate through col/row "if cell value == trait, .append traitListPlacement"



def getSpecificPlacement(min_row,min_col,max_row,max_col,trait,traitlist):
    for col in ws.iter_cols(min_row=min_row, min_col=min_col, max_row=max_row, max_col=max_col):
        for cell in col:
            if cell.value == trait:
                traitlist.append(ws.cell(row=cell.row,column=13).value)
#these 33 lines of code are used to search the worksheet and append each list with the placement values.
#i'm pretty sure there's a way to condense this massively and iterate through it, but it might include renaming 
#so that the syntax for list and traitlist are the same.

brawler4 = []
brawler6 = []
cultist6 = []
cultist9 = []
duelist4 = []
duelist6 = []
dusk4 = []
dusk6 = []
elder6 = []
hunter3 = []
hunter4 = []
hunter5 = []
ninja4 = []
shade3 = []
sharp4 = []
warlord6 = []
warlord9 = []
getSpecificPlacement(42,10,81,10,'Brawler 4',brawler4)
getSpecificPlacement(42,10,81,10,'Brawler 6',brawler6)
getSpecificPlacement(42,10,81,10,'Cultist 6',cultist6)
getSpecificPlacement(42,10,81,10,'Cultist 9',cultist9)
getSpecificPlacement(42,10,81,10,'Duelist 4',duelist4)
getSpecificPlacement(42,10,81,10,'Duelist 6',duelist6)
getSpecificPlacement(42,10,81,10,'Dusk 4',dusk4)
getSpecificPlacement(42,10,81,10,'Dusk 6',dusk6)
getSpecificPlacement(42,10,81,10,'Elder 6',elder6)
getSpecificPlacement(42,10,81,10,'Hunter 3',hunter3)
getSpecificPlacement(42,10,81,10,'Hunter 4',hunter4)
getSpecificPlacement(42,10,81,10,'Hunter 5',hunter5)
getSpecificPlacement(42,10,81,10,'Ninja 4',ninja4)
getSpecificPlacement(42,10,81,10,'Shade 3',shade3)
getSpecificPlacement(42,10,81,10,'Sharp 4', sharp4)
getSpecificPlacement(42,10,81,10,'Warlord 6',warlord6)
getSpecificPlacement(42,10,81,10,'Warlord 9',warlord9)

listOfLists = [brawler4, brawler6, cultist6, cultist9, duelist4, duelist6, dusk4, dusk6, elder6, hunter3, hunter4,
               hunter5, ninja4, shade3, sharp4, warlord6, warlord9]

#create a function that gets the average of each list and appends the appropriate list with averages.

# print(componentsAndPlacement)
